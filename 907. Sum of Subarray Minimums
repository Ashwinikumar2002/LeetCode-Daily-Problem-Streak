class Solution {
public:
    int sumSubarrayMins(vector<int>& arr) {
        int n = arr.size();
        vector<int> nse(n, n);
        stack<int> st;
        for(int i=0;i<n;++i)
        {
            if(st.size() == 0) st.push(i);
            else if(arr[i] >=arr[st.top()]) st.push(i);
            else
            {
                while(st.size() and arr[st.top()] >= arr[i])
                {
                    nse[st.top()] = i;
                    st.pop();
                }
                st.push(i);
            }
        }
        long long ans = 0;
        int mod = 1e9 + 7;
        for(int i = 0; i < n; i++)
        {
            int p1 = i;
            int p2 = nse[p1];
            while(p2 < n)
            {
                ans += arr[p1] * (p2 - p1);
                ans %= mod;
                p1 = p2;
                p2 = nse[p1];
            }
            ans += arr[p1] * (p2 - p1);
            ans %= mod;
        }

        return ans %= mod;
    }
};

// 3 ,1, 2, 4, 31, 34, 24,312, 124, 3124 
